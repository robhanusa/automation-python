#!/usr/bin/env python3

import json
import locale
import sys
from reportlab.platypus import SimpleDocTemplate
from reportlab.platypus import Paragraph, Spacer, Table, Image
from reportlab.lib.styles import getSampleStyleSheet


def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  max_revenue = {"revenue": 0}
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item
    # TODO: also handle max sales
      #Calculate the car model which had the most sales.
      # Call format_car method for the car model.
  max_sales = {'total_sales': 0}
  for item in data:
    if item["total_sales"] > max_sales['total_sales']:
      max_sales = item
    # TODO: also handle most popular car_year
      #Calculate the most popular car_year across all car make/models.
      #Hint: Find the total count of cars with the car_year equal to 2005, equal to 2006, etc. and then figure out the most popular year.
  sales_per_year = {}
  for item in data:
    if item['car']['car_year'] not in sales_per_year:
        sales_per_year[item['car']['car_year']] = item['total_sales']
    else:
        sales_per_year[item['car']['car_year']] += item['total_sales']
  max_year = [0,0]
  for year in sales_per_year.keys():
    if sales_per_year[year] > max_year[1]:
        max_year = [year,sales_per_year[year]]
      
  summary = [
    "The {} generated the most revenue: ${}".format(
      format_car(max_revenue["car"]), max_revenue["revenue"]),
    "The {} had the most sales: {}".format(
        format_car(max_sales['car']), max_sales['total_sales']),
    "The most popular year was {} with {} sales.".format(max_year[0],max_year[1])
  ]

  return summary, sales_per_year


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary, sales_per_year = process_data(data)
  print(summary)


  # TODO: turn this into a PDF report
  report = SimpleDocTemplate(r"C:\Users\rkhan\pythontest\courserafinalproject\cars.pdf")
  styles = getSampleStyleSheet()
  summary =  Paragraph("A Complete Inventory of My Fruit", styles["h1"])
  print(styles)

  # TODO: send the PDF report as an email attachment


if __name__ == "__main__":
  main(sys.argv)
